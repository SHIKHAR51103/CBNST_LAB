SECANT METHOD : The secant method is a numerical technique used to approximate the roots of a real-valued function. 
It's an iterative method that improves upon the idea of the bisection method by using a line that passes through two points on the function curve to estimate the root.


ALGORITHM :




1 Choose two initial guesses, x0 and x1, such that f(x0) and f(x1) have opposite signs.
2 Compute the secant line passing through (x0, f(x0)) and (x1, f(x1)).
3 The intersection of the secant line with the x-axis gives an improved approximation, x2, to the root.
4 Update x0 and x1 by shifting them to x1 and x2, respectively.
5 Repeat steps 2-4 until the approximation is sufficiently accurate or a predefined number of iterations is reached.
6 The formula to compute the next approximation, x2, using the secant method is given by:x= x1 - [(x0 - x1)/ (f(x0) - f(x1)]f(x1).



PROGRAM : 

#include <stdio.h>
#include <math.h>

// Function for which we want to find the root
double function(double x) {
    return x*x - 4; // Example function: x^2 - 4
}

// Secant method algorithm
double secant(double x0, double x1, double tolerance) {
    double x2;

    while (1) {
        double fx0 = function(x0);
        double fx1 = function(x1);

        x2 = x1 - (fx1 * (x1 - x0)) / (fx1 - fx0);

        if (fabs(fx1) < tolerance) {
            break;
        }

        x0 = x1;
        x1 = x2;
    }
    return x2;
}

int main() {
    double x0, x1, root, tolerance;

    printf("Enter initial guesses (x0 and x1): ");
    scanf("%lf %lf", &x0, &x1);

    printf("Enter tolerance: ");
    scanf("%lf", &tolerance);

    root = secant(x0, x1, tolerance);
    printf("Approximate root: %lf\n", root);

    return 0;
}
