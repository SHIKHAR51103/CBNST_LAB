SECANT METHOD : The secant method is a numerical technique used to approximate the roots of a real-valued function. 
It's an iterative method that improves upon the idea of the bisection method by using a line that passes through two points on the function curve to estimate the root.


ALGORITHM :




1 Choose two initial guesses, x0 and x1, such that f(x0) and f(x1) have opposite signs.
2 Compute the secant line passing through (x0, f(x0)) and (x1, f(x1)).
3 The intersection of the secant line with the x-axis gives an improved approximation, x2, to the root.
4 Update x0 and x1 by shifting them to x1 and x2, respectively.
5 Repeat steps 2-4 until the approximation is sufficiently accurate or a predefined number of iterations is reached.
6 The formula to compute the next approximation, x2, using the secant method is given by:x= x1 - [(x0 - x1)/ (f(x0) - f(x1)]f(x1).



PROGRAM : 

#include <stdio.h>
#include <math.h>

// Function for which we want to find the root
double function(double x) {
    return x*x - 4; // Example function: x^2 - 4
}

// Secant method algorithm
double secant(double x0, double x1, double tolerance) {
    double x2;

    while (1) {
        double fx0 = function(x0);
        double fx1 = function(x1);

        x2 = x1 - (fx1 * (x1 - x0)) / (fx1 - fx0);

        if (fabs(fx1) < tolerance) {
            break;
        }

        x0 = x1;
        x1 = x2;
    }
    return x2;
}

int main() {
    double x0, x1, root, tolerance;

    printf("Enter initial guesses (x0 and x1): ");
    scanf("%lf %lf", &x0, &x1);

    printf("Enter tolerance: ");
    scanf("%lf", &tolerance);

    root = secant(x0, x1, tolerance);
    printf("Approximate root: %lf\n", root);

    return 0;
}





ITERATIVE METHOD  : 
The fixed point iteration method in numerical analysis is used to find an approximate solution to algebraic and transcendental equations. 
Sometimes, it becomes very tedious to find solutions to cubic, bi-quadratic and transcendental equations; then, we can apply specific numerical methods to find the solution; one among those methods is the fixed point iteration method.

The fixed point iteration method uses the concept of a fixed point in a repeated manner to compute the solution of the given equation. 
A fixed point is a point in the domain of a function g such that g(x) = x. In the fixed point iteration method, the given function is algebraically converted in the form of g(x) = x.





ALGORITHM : 

Algorithm of Fixed Point Iteration Method
1. Choose the initial value xo for the iterative method. One way to choose xo is to find the values x = a and x = b for which f(a) < 0 and f(b) > 0. By narrowing down the selection of a and b, take xo as the average of a and b.
2. Express the given equation, in the form x = g(x) such that |g’(x)| < 1 at x = xo. If there more than one possibility of g(x), choose the g(x) which has the minimum value of g’(x) at x = xo.
3. By applying the successive approximations xn = g(xn – 1), if f is a continuous function, we get a sequence of {xn} which converges to a point lo, which is the approximate solution of the given equation.





PROGRAM : 


#include <stdio.h>
#include <math.h>

// Function for which we want to find the root
double function(double x) {
    return x*x - 4; // Example function: x^2 - 4
}

// Iteration (Fixed-Point Iteration) method algorithm
double iteration(double x0, double tolerance) {
    double x = x0;

    while (1) {
        double fx = function(x);

        if (fabs(fx) < tolerance) {
            break;
        }

        x = fx; // Replace with your specific iteration formula if needed.
    }
    return x;
}

int main() {
    double x0, root, tolerance;

    printf("Enter initial guess (x0): ");
    scanf("%lf", &x0);

    printf("Enter tolerance: ");
    scanf("%lf", &tolerance);

    root = iteration(x0, tolerance);
    printf("Approximate root: %lf\n", root);

    return 0;
}





